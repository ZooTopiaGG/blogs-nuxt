# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;
   # include /etc/nginx/vhosts/*.conf;
   
   upstream dengpeng {
    	server 127.0.0.1:8088; 
	# 这里的端口号写你node.js运行的端口号，也就是要代理的端口号，我的项目跑在8081端口上
    	keepalive 64;
   }

   server {
   	listen       80;
    	server_name api.55lover.com;             #绑定的域名
	# 开启gzip
	gzip on;
	gzip_static on;
	# 启用gzip压缩的最小文件，小于设置值的文件将不会压缩
	gzip_min_length 1k;
	# gzip 压缩级别，1-9，数字越大压缩的越好，也越占用CPU时间，后面会有详细说明
	gzip_comp_level 9;
	# 进行压缩的文件类型。javascript有多种形式。其中的值可以在 mime.types 文件中找到。
	gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
	# 是否在http header中添加Vary: Accept-Encoding，建议开启
	gzip_vary on;
	# 禁用IE 6 gzip
	gzip_disable "MSIE [1-6]\.";
	
	#配置缓存
	#location ~* ^.+\.(ico|gif|jpg|jpeg|png)$ { 
        #	access_log   off; 
        #	expires      30d;
	#}
	#location ~* ^.+\.(css|js|txt|xml|swf|wav)$ {
	#	access_log   off;
	#	expires      24h;
	#}
	#location ~* ^.+\.(html|htm)$ {
	#        expires      1h;
	#}
	
	
   	location /
   	{
     		proxy_set_header X-Real-IP $remote_addr;
        	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        	proxy_set_header Host $http_host;
        	proxy_set_header X-Nginx-Proxy true;
        	proxy_set_header Connection "";
        	proxy_pass http://dengpeng; # 这里要和最上面upstream后的应用名一致，可以自定义
    	}	
	#access_log  /mnt/log/www/jakexin_access.log;    #网站访问日志#   
   }
   server {
   	listen       80;
    	server_name file.55lover.com;           #绑定的域名
	root /home/api.55lover.com;
	# 开启gzip
	gzip on;
	# 启用gzip压缩的最小文件，小于设置值的文件将不会压缩
	gzip_min_length 1k;
	# gzip 压缩级别，1-9，数字越大压缩的越好，也越占用CPU时间，后面会有详细说明
	gzip_comp_level 9;
	# 进行压缩的文件类型。javascript有多种形式。其中的值可以在 mime.types 文件中找到。
	gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
	# 是否在http header中添加Vary: Accept-Encoding，建议开启
	gzip_vary on;
	# 禁用IE 6 gzip
	gzip_disable "MSIE [1-6]\.";
	
	#配置缓存
	#location ~* ^.+\.(ico|gif|jpg|jpeg|png)$ { 
        #access_log   off; 
        #expires      30d;
	#}
	#location ~* ^.+\.(css|js|txt|xml|swf|wav)$ {
	#    access_log   off;
	#    expires      24h;
	#}
	#location ~* ^.+\.(html|htm)$ {
	#        expires      1h;
	#}
	
	
   	location /
   	{
     		proxy_set_header X-Real-IP $remote_addr;
        	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        	proxy_set_header Host $http_host;
        	proxy_set_header X-Nginx-Proxy true;
        	proxy_set_header Connection "";
        	proxy_pass http://dengpeng; # 这里要和最上面upstream后的应用名一致，可以自定义
    	}	
	#access_log  /mnt/log/www/jakexin_access.log;    #网站访问日志#   
   }

   server {
        listen       80;
        server_name  www.55lover.com;
        root         /usr/share/nginx/html;
	# 开启gzip
	gzip on;
	gzip_static on;
	# 启用gzip压缩的最小文件，小于设置值的文件将不会压缩
	gzip_min_length 1k;	# gzip 压缩级别，1-9，数字越大压缩的越好，也越占用CPU时间，后面会有详细说明
	gzip_comp_level 9;
	# 进行压缩的文件类型。javascript有多种形式。其中的值可以在 mime.types 文件中找到。
	gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
	# 是否在http header中添加Vary: Accept-Encoding，建议开启
	gzip_vary on;
	# 禁用IE 6 gzip
	gzip_disable "MSIE [1-6]\.";
	
        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location / {
	      try_files $uri $uri/ /index.html;
              index index.html index.htm;
        }

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }
    server {
        listen       80 default_server;
        server_name  m.55lover.com;
        root         /usr/share/nginx/mhtml;
	# 开启gzip
	gzip on;
	gzip_static on;
	# 启用gzip压缩的最小文件，小于设置值的文件将不会压缩
	gzip_min_length 1k;
	# gzip 压缩级别，1-9，数字越大压缩的越好，也越占用CPU时间，后面会有详细说明
	gzip_comp_level 9;
	# 进行压缩的文件类型。javascript有多种形式。其中的值可以在 mime.types 文件中找到。
	gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
	# 是否在http header中添加Vary: Accept-Encoding，建议开启
	gzip_vary on;
	# 禁用IE 6 gzip
	gzip_disable "MSIE [1-6]\.";
	
        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location / {
	      try_files $uri $uri/ /index.html;
              index index.html index.htm;
        }

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }

# Settings for a TLS enabled server.
#
#    server {
#        listen       443 ssl http2 default_server;
#        listen       [::]:443 ssl http2 default_server;
#        server_name  _;
#        root         /usr/share/nginx/html;
#
#        ssl_certificate "/etc/pki/nginx/server.crt";
#        ssl_certificate_key "/etc/pki/nginx/private/server.key";
#        ssl_session_cache shared:SSL:1m;
#        ssl_session_timeout  10m;
#        ssl_ciphers HIGH:!aNULL:!MD5;
#        ssl_prefer_server_ciphers on;

        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#
#        location / {
#        }
#
#        error_page 404 /404.html;
#            location = /40x.html {
#        }
#
#        error_page 500 502 503 504 /50x.html;
#            location = /50x.html {
#        }
#    }

}

